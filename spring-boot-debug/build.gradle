plugins {
    id "java-library"
    id "org.jetbrains.kotlin.jvm"
    id "org.springframework.boot.conventions"
    id "org.springframework.boot.deployed"
    id "org.springframework.boot.optional-dependencies"
}

//group 'org.springframework.boot'
//version '2.4.5'

description = "Spring Boot Debug"
//repositories {
//    mavenCentral()
//}

dependencies {

    api(project(":spring-boot-project:spring-boot"))
    api(project(":spring-boot-project:spring-boot-autoconfigure"))
//    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter"))
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-aop"))
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-web"))
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-jdbc"))
    api(project(":spring-boot-project:spring-boot-starters:spring-boot-starter-data-jpa"))
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '5.0.7'
    // https://mvnrepository.com/artifact/com.alibaba/druid
    implementation group: 'com.alibaba', name: 'druid', version: '1.2.8'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.2.0'

//    api("org.springframework:spring-aop")
//    api("org.aspectj:aspectjweaver")

//    optional("com.fasterxml.jackson.core:jackson-databind")
//    optional("com.google.code.gson:gson")
//    optional("com.jayway.jsonpath:json-path")
//    optional("io.projectreactor.netty:reactor-netty-http")
//    optional("javax.json.bind:javax.json.bind-api")
//    optional("javax.servlet:javax.servlet-api")
//    optional("junit:junit")
//    optional("org.apache.httpcomponents:httpclient")
//    optional("org.assertj:assertj-core")
//    optional("org.hamcrest:hamcrest-core")
//    optional("org.hamcrest:hamcrest-library")
//    optional("org.jetbrains.kotlin:kotlin-stdlib")
//    optional("org.jetbrains.kotlin:kotlin-reflect")
//    optional("org.junit.jupiter:junit-jupiter-api")
//    optional("org.mockito:mockito-core")
//    optional("org.skyscreamer:jsonassert")
//    optional("org.seleniumhq.selenium:htmlunit-driver")
//    optional("org.seleniumhq.selenium:selenium-api")
//    optional("org.springframework:spring-test")
//    optional("org.springframework:spring-web")
//    optional("org.springframework:spring-webflux")
//    optional("net.sourceforge.htmlunit:htmlunit")
//
//    testImplementation(project(":spring-boot-project:spring-boot-tools:spring-boot-test-support"))
//    testImplementation("io.mockk:mockk")
//    testImplementation("javax.json:javax.json-api")
//    testImplementation("ch.qos.logback:logback-classic")
//    testImplementation("org.apache.tomcat.embed:tomcat-embed-core")
//    testImplementation("org.codehaus.groovy:groovy")
//    testImplementation("org.codehaus.groovy:groovy-xml")
//    testImplementation("org.apache.johnzon:johnzon-jsonb")
//    testImplementation("org.junit.jupiter:junit-jupiter")
//    testImplementation("org.mockito:mockito-junit-jupiter")
//    testImplementation("org.slf4j:slf4j-api")
//    testImplementation("org.spockframework:spock-core")
//    testImplementation("org.springframework:spring-webmvc")
//    testImplementation("org.testng:testng")
//
//    testRuntimeOnly("org.junit.vintage:junit-vintage-engine")
//
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}